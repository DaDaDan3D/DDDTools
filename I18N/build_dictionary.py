# -*- encoding:utf-8 -*-
import os.path
import csv

def create_translation_dict_from_csv(csv_path, locales):
    # 翻訳辞書を初期化
    translations_dict = dict()

    # CSV ファイルを開く
    with open(csv_path, 'r', encoding='utf-8') as csvfile:
        # CSV リーダーを作成
        reader = csv.DictReader(csvfile)

        # 各行を処理
        for row in reader:
            # キーを取得
            key = row['key']

            # コンテキストを取得
            context = row.get('context') or '*'
            
            for locale in locales:
                # 翻訳テキストを取得
                translation_text = row.get(locale)

                # 辞書に追加
                if translation_text:
                    if locale not in translations_dict:
                        translations_dict[locale] = dict()
                    translations_dict[locale][(context, key)] = translation_text

    return translations_dict

# i18n.csv から dictionary.py を作成する
def build_dictionary():
    csv_path = os.path.join(os.path.dirname(__file__), 'i18n.csv')
    py_path = os.path.join(os.path.dirname(__file__), 'dictionary.py')

    print(f'reading {csv_path}...')
    locales = ['en_US', 'es', 'fr_FR', 'ja_JP', 'sk_SK', 'vi_VN', 'zh_CN', 'ca_AD', 'cs_CZ', 'de_DE', 'it_IT', 'ka', 'ko_KR', 'pt_BR', 'pt_PT', 'ru_RU', 'uk_UA', 'zh_TW', 'ab', 'ar_EG', 'eo', 'eu_EU', 'fa_IR', 'fi_FI', 'ha', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'ky_KG', 'nl_NL', 'pl_PL', 'sr_RS', 'sr_RS@latin', 'sv_SE', 'th_TH', 'tr_TR']
    translations_dict = create_translation_dict_from_csv(csv_path, locales)

    print(f'writing {py_path}...')
    with open(py_path, 'w', encoding='utf-8') as f:
        header_str = """# -*- encoding:utf-8 -*-
################################################################
#
# This file is automatically created from i18n.csv.
# Do not edit this file.
# Instead, run 'python build_dictionay.py'
#
################################################################

translations_dict = {
"""
        f.write(header_str)
        
        for locale, local_dict in translations_dict.items():
            f.write(f"    '{locale}': {{\n")
            for key, msg in local_dict.items():
                f.write(f'        {key}: "{msg}",\n')
            f.write('    },\n')

        f.write('}\n')

    print('done.')

if __name__ == '__main__':
    build_dictionary()
